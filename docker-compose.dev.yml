version: "3.2"
services:
  db:
    restart: always
    image: postgres:10.1-alpine
    container_name: corpjukdev_pg01
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - main
  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    container_name: corpjukdev_dj01
    environment:
      - DJANGO_SETTINGS_MODULE=eatplants.settings.dev
      - PYTHONDONTWRITEBYTECODE=1
      - SECRET_KEY=(iw=q)rdu%xe4+y+xg1kh+-j18l8#(%8uosq_gz3^r6ckl&
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./static:/app/static
    networks:
      - main
    ports:
      - "8001:8001"
    depends_on:
      - db
    env_file:
      - .env
  nginx:
    restart: always
    image: nginx:1.15-alpine
    container_name: corpjukdev_ng01
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/usr/share/nginx/corpjukdev/static
    ports:
      - "80:80"
      - "443:443"
    networks:
      - main
    depends_on:
      - app
  fastapi:
    build:
      dockerfile: Dockerfile.fastapi
    image: fastapi
    environment:
      - DEBUG=0
      - ECHO_ACTIVE=0
      - APP_AUTH_TOKEN=GDuKzKRcgjTN1ap7WrVte91fMX3k_l5A-XTgUCP_RXc
      - OCR_API_TOKEN_HEADER=E3FF2839C048B25C084DEBE9B26995E310250568
    ports:
      - "3000:3000"
    networks:
      - main
    links:
      - "app"
networks:
  main: